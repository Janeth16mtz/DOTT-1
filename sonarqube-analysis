pipeline {
    agent any
    tools {
        go 'Go_version'
    }
    environment {
        GO114MODULE = 'on'
        CGO_ENABLED = 0 
        GOPATH = "${JENKINS_HOME}/jobs/${JOB_NAME}"
    }
    stages {
        stage('SnarQube analysis'){
            steps{
                script{
                    def scannerHome = tool 'sonar_scaner';
                    withSonarQubeEnv('sonar') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=jenkins \
                          -Dsonar.sources=cidr_convert_api/go/ \
                          -Dsonar.host.url=http://ec2-18-222-4-170.us-east-2.compute.amazonaws.com:9000 \
                          -Dsonar.login=1b781baf9286c06da74eb05ed0b3f287bcfe041f"
                    }
                }
            }
        }
        stage('Pre Test') {
            steps {
                echo 'Installing dependencies'
                sh 'go version'
                sh 'go get -u golang.org/x/lint/golint'
            }
        }
        stage('Build') {
            steps {
                script{
                    def root = tool type: 'go', name: 'Go_version'
                    sh 'cd cidr_convert_api/go/'
                    // Export environment variables pointing to the directory where Go was installed
                    withEnv(["GOROOT=${root}", "PATH+GO=${root}/bin"]) {
                        sh 'go build'
                    }
                }
            }
        }
        stage('Unit test'){
            steps{
                sh 'go test -cover ./...'
            } 
        }
    }
} 
